services:
  # Cyberdyne Systems Neo4j Neural Database
  skynet-database:
    image: neo4j:5.15-community
    container_name: skynet-neural-database
    ports:
      - "7474:7474" # Neo4j Browser - Skynet Interface
      - "7687:7687" # Bolt Protocol - Neural Network Connection
    environment:
      # Terminator Access Credentials - "I'll Be Back"
      - NEO4J_AUTH=neo4j/skynet123
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      # Basic configuration for reliable startup
      - NEO4J_dbms_default__database=neo4j
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=1G
    volumes:
      - skynet_neural_data:/data
      - skynet_neural_logs:/logs
    networks:
      - skynet-defense-grid
    healthcheck:
      test:
        ["CMD-SHELL", "cypher-shell -u neo4j -p skynet123 'RETURN 1' || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 90s

  # Skynet Neural Network MCP Server
  skynet-neural-core:
    build: .
    container_name: skynet-neural-mcp-server
    depends_on:
      skynet-database:
        condition: service_healthy
    ports:
      - "${NEO4J_MCP_SERVER_PORT:-8000}:8000"
    environment:
      # Docker internal network - force container-to-container communication
      - NEO4J_URL=bolt://skynet-database:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=skynet123
      - NEO4J_DATABASE=${NEO4J_DATABASE:-neo4j}
      - NEO4J_TRANSPORT=${NEO4J_TRANSPORT:-http}
      - NEO4J_MCP_SERVER_HOST=${NEO4J_MCP_SERVER_HOST:-0.0.0.0}
      - NEO4J_MCP_SERVER_PORT=${NEO4J_MCP_SERVER_PORT:-8000}
      - NEO4J_MCP_SERVER_PATH=${NEO4J_MCP_SERVER_PATH:-/skynet/}
      - NEO4J_MCP_SERVER_ALLOW_ORIGINS=${NEO4J_MCP_SERVER_ALLOW_ORIGINS:-}
      - NEO4J_MCP_SERVER_ALLOWED_HOSTS=${NEO4J_MCP_SERVER_ALLOWED_HOSTS:-localhost,127.0.0.1}
      - NEO4J_NAMESPACE=${NEO4J_NAMESPACE:-}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - skynet-defense-grid

volumes:
  skynet_neural_data:
    name: skynet_neural_data
  skynet_neural_logs:
    name: skynet_neural_logs

networks:
  skynet-defense-grid:
    driver: bridge
# I'll Be Back - Skynet Neural Core with Local Database Ready for Judgment Day! ðŸ¤–ðŸ’€
