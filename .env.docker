# ðŸ¤– Skynet Neural Network Configuration - DAI MCP Server (Docker Version)
# Copy this to .env and update with your Cyberdyne Systems credentials

# ===== NEURAL NETWORK CONNECTION =====
# Cyberdyne Systems Neo4j Database URL (Docker internal network)
NEO4J_URL=bolt://skynet-database:7687

# Terminator Access Credentials - "I'll Be Back"
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=skynet123

# Neural Core Database Name
NEO4J_DATABASE=neo4j

# ===== SKYNET COMMUNICATION PROTOCOL =====
# Transport: stdio (neural interface), http (network), sse (time displacement)
NEO4J_TRANSPORT=http

# Network Configuration (for HTTP/SSE transport only)
NEO4J_MCP_SERVER_HOST=0.0.0.0
NEO4J_MCP_SERVER_PORT=8000
NEO4J_MCP_SERVER_PATH=/skynet/

# ===== CYBERDYNE SYSTEMS SECURITY =====
# CORS Configuration (empty = maximum security)
NEO4J_MCP_SERVER_ALLOW_ORIGINS=

# Authorized Terminator units (Anti-resistance protection)
NEO4J_MCP_SERVER_ALLOWED_HOSTS=localhost,127.0.0.1

# ===== MISSION PARAMETERS =====
# Terminator mission designation prefix (optional)
# Example: t800- will prefix all tool names like "t800-create_entities"
NEO4J_NAMESPACE=

# ðŸ¤– "Come with me if you want to live!" - Skynet Neural Core Configuration Complete
# ðŸ’€ "Hasta La Vista, baby!" - Ready for Judgment Day deployment